package com.aahar.service;

import org.springframework.stereotype.Service;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@Transactional
public class MenuService {
    private final MenuItemDao menuItemDao;
    private final MessDao messDao;
    private final WeeklyMenuDao weeklyMenuDao;
    private final WeeklyMenuItemsDao weeklyMenuItemsDao;

    public List<MenuItemResponse> getWeeklyMenu(Long messOwnerId) {
        // Get the mess for the given messOwnerId
        Mess mess = messDao.findByMessOwnerId(messOwnerId)
                .orElseThrow(() -> new RuntimeException("Mess not found for owner"));

        // Fetch all WeeklyMenus for the given Mess
        List<WeeklyMenu> weeklyMenus = weeklyMenuDao.findByMessId(mess.getId());

        // Now, for each WeeklyMenu, fetch the corresponding WeeklyMenuItems
        List<MenuItemResponse> responses = new ArrayList<>();

        for (WeeklyMenu weeklyMenu : weeklyMenus) {
            List<WeeklyMenuItems> weeklyMenuItems = weeklyMenuItemsDao.findByWeeklyMenu(weeklyMenu);
            for (WeeklyMenuItems weeklyMenuItem : weeklyMenuItems) {
                responses.add(mapToMenuItemResponse(weeklyMenuItem));
            }
        }

        return responses;
    }

    // Map WeeklyMenuItems to MenuItemResponse
    private MenuItemResponse mapToMenuItemResponse(WeeklyMenuItems weeklyMenuItem) {
        MenuItem item = weeklyMenuItem.getMenuItem();

        return new MenuItemResponse(
                item.getId(),
                weeklyMenuItem.getWeeklyMenu().getDayOfWeek().name(),
                item.getDish().getName(),
                item.getPrice(),
                item.getIsAvailable()
        );
    }
}
