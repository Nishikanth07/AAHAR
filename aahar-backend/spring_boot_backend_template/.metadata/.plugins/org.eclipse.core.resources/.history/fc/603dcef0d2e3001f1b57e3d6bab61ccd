package com.aahar.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.aahar.daos.MenuItemDao;
import com.aahar.daos.MessDao;
import com.aahar.daos.WeeklyMenuDao;
import com.aahar.daos.WeeklyMenuItemsDao;
import com.aahar.dtos.MenuItemRespDTO;
import com.aahar.pojos.MenuItem;
import com.aahar.pojos.Mess;
import com.aahar.pojos.WeeklyMenu;
import com.aahar.pojos.WeeklyMenuItem;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@Transactional
@RequiredArgsConstructor
public class MenuServiceImpl {
	@Autowired
    private final MenuItemDao menuItemDao;
	
	@Autowired
    private final MessDao messDao;
	
	@Autowired
    private final WeeklyMenuDao weeklyMenuDao;
	
	@Autowired
    private final WeeklyMenuItemsDao weeklyMenuItemsDao;

	public List<MenuItemRespDTO> getWeeklyMenu(Long messOwnerId) {
	    // Get all messes for the given messOwnerId
	    List<Mess> messes = messDao.findByMessOwnerId(messOwnerId);
	    if (messes.isEmpty()) {
	        throw new RuntimeException("No mess found for the given owner");
	    }

	    List<MenuItemRespDTO> responses = new ArrayList<>();

	    for (Mess mess : messes) {
	        // Fetch all WeeklyMenus for the given Mess
	        List<WeeklyMenu> weeklyMenus = weeklyMenuDao.findByMessId(mess.getId());

	        // Now, for each WeeklyMenu, fetch the corresponding WeeklyMenuItems
	        for (WeeklyMenu weeklyMenu : weeklyMenus) {
	            List<WeeklyMenuItem> weeklyMenuItems = weeklyMenuItemsDao.findByWeeklyMenu(weeklyMenu);
	            for (WeeklyMenuItem weeklyMenuItem : weeklyMenuItems) {
	                responses.add(mapToMenuItemResponse(weeklyMenuItem));
	            }
	        }
	    }

	    return responses;
	}



    // Map WeeklyMenuItems to MenuItemResponse
    private MenuItemRespDTO mapToMenuItemResponse(WeeklyMenuItem weeklyMenuItem) {
        MenuItem item = weeklyMenuItem.getMenuItem();

        return new MenuItemRespDTO(
                item.getId(),
                weeklyMenuItem.getWeeklyMenu().getWeekday() .name(),
                item.getDish().getName(),
                item.getPrice(),
                item.getIsAvailable()
        );
    }
}
